x-service-resource: &service-resource
  limits:
    cpus: '1'
    memory: 512M
  reservations:
    cpus: '1'
    memory: 512M

x-load-resource: &load-resource
  limits:
    cpus: '2'
    memory: 2G
  reservations:
    cpus: '2'
    memory: 2G

x-collector-resource: &collector-resource
  limits:
    cpus: '1'
    memory: 1G
  reservations:
    cpus: '1'
    memory: 1G

# this env variable is only for when EXPORT_CONTROLLER_DURATION is true (default is false)
x-common-env-variable-controller-time: &common-env-variable-controller-time
  OTEL_ENDPOINT: ${OTEL_EXPORTER_ENDPOINT}
  OTEL_HEADERS: ${OTEL_EXPORTER_OTLP_TRACES_HEADERS_STG}
  EXPORT_CONTROLLER_DURATION: false
  CONTROLLER_METRICS_NAME: ruby.rails.controller.response.time
  METRICS_ATTRIBUTE_NAME: apm-ruby-benchmark-attr

services:
  swo_ruby_apm_on:
    image: swo_ruby_apm_benchmark:latest
    build:
      context: ./benchmark
      dockerfile: Dockerfile
    container_name: swo_ruby_apm_benchmark_on-1
    restart: "no"
    # command: tail -f /dev/null
    ports:
      - 8002:8002
    environment:
      <<: *common-env-variable-controller-time
      AGENT_TYPE: apm-on
      SW_APM_COLLECTOR: ${SW_APM_COLLECTOR_STG}
      SW_APM_SERVICE_KEY: ${AGENT_TOKEN_STG} # with service name: swo-benchmark-test
    volumes:
      - ./java-collector/server-grpc.crt:/var/app/learn-rails/server-grpc.crt
    deploy:
      resources: *service-resource
    depends_on:
      - java-collector

  swo_ruby_apm_otlp_on:
    image: swo_ruby_apm_benchmark:latest
    build:
      context: ./benchmark
      dockerfile: Dockerfile
    container_name: swo_ruby_apm_benchmark_otlp_on-1
    restart: "no"
    # command: tail -f /dev/null
    ports:
      - 8004:8002
    environment:
      <<: *common-env-variable-controller-time
      AGENT_TYPE: apm-otlp-on
      OTLP_MODE_ON: true
      SW_APM_REPORTER: file
      OTEL_SERVICE_NAME: swo-benchmark-test-otlp
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: ${OTEL_EXPORTER_OTLP_METRICS_ENDPOINT_STG}
      OTEL_EXPORTER_OTLP_METRICS_HEADERS: ${OTEL_EXPORTER_OTLP_METRICS_HEADERS_STG}
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: ${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT_STG}
      OTEL_EXPORTER_OTLP_TRACES_HEADERS: ${OTEL_EXPORTER_OTLP_TRACES_HEADERS_STG}
    deploy:
      resources: *service-resource
    depends_on:
      - otel-collector

  swo_ruby_apm_off:
    image: swo_ruby_apm_benchmark:latest
    build:
      context: ./benchmark
      dockerfile: Dockerfile
    container_name: swo_ruby_apm_benchmark_off-2
    restart: "no"
    # command: tail -f /dev/null
    ports:
      - 8003:8002
    environment:
      <<: *common-env-variable-controller-time
      AGENT_TYPE: apm-off
      SW_APM_ENABLED: false
    volumes:
      - ./java-collector/server-grpc.crt:/var/app/learn-rails/server-grpc.crt
    deploy:
      resources: *service-resource
    depends_on:
      - java-collector

  # python container that can run locust endless
  # this locust run will produce metrics: apm.ruby.benchmark.response.time
  # on swo backend, you will expect to see the Service with name apm-ruby-benchmark without any trace (metrics only)
  locust_app_holder:
    image: locust_app_holder:latest
    build:
      context: ./locust-holder
      dockerfile: Dockerfile
    container_name: locust-app-holder
    # command: locust --headless -u 1 --host http://0.0.0.0:8002
    environment:
      API_TOKEN: ${API_TOKEN}
      SERVICE_NAME: apm-ruby-benchmark
      CUSTOM_METRICS_NAME: apm.ruby.benchmark.response.time
      BENCHMARK_ENDPOINT:  otel.collector.na-01.st-ssp.solarwinds.com:443
      LOCUST_WAIT_TIME_LOW: 10
      LOCUST_WAIT_TIME_HIGH: 20
      METRICS_ATTRIBUTE_NAME: apm-ruby-benchmark-attr
    volumes:
      - ./java-collector/server-grpc.crt:/var/app/learn-rails/server-grpc.crt
    depends_on:
      - java-collector
      - otel-collector
      - swo_ruby_apm_on
      - swo_ruby_apm_otlp_on
      - swo_ruby_apm_off
    deploy:
      resources: *load-resource

  java-collector:
    image: "traceqa/test-collector:java-collector"
    container_name: java-collector
    volumes:
      - ./java-collector/settings-benchmark.db:/settings.db
      - ./java-collector/server-grpc.pem:/server-grpc.pem
      - ./java-collector/server-grpc.crt:/server-grpc.crt
      - ./java-collector/config-proxy-ao-benchmark.json:/config.json
    ports:
      - 8181:8181
      - 12224:12224
    command: java -jar apm-agent-test-collector.jar
    deploy:
      resources: *collector-resource

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    logging:
      options:
        max-file: '1'
        max-size: 100m
        mode: non-blocking
        max-buffer-size: 5m
    container_name: otel-collector-benchmark
    ports:
      - "4327:4317" # grpc (4327 is for 0.0.0.0:4327; 4317 is for otel-collector:4317)
      - "4328:4318" # http
    volumes:
      - ./otel-collector/otel-collector-config-2.yaml:/etc/otel-collector-config.yaml
    deploy:
      resources: *collector-resource

